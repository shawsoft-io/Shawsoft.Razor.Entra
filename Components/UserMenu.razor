
@*
<div class="flex items-center gap-x-5 md:gap-x-8" @onmouseover="() => ShowContextMenu = true" @onmouseout="() => ShowContextMenu = false">
    <div class="relative ml-4 flex-shrink-0">
        <div>
            <button type="button" class="flex rounded-full text-sm text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                <span class="sr-only">Open user menu</span>
                <Avatar ClassNames="h-10 w-10 rounded-full" />
            </button>
        </div>

        @if (ShowContextMenu)
        {
            <div class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                <p class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Hello, @SessionManager.CurrentUser?.DisplayName</p>
                    
                
                @if (SessionManager?.GetClaimValue()?.Length > 0)
                {
                    <p class="block px-4 py-2 flex flex-wrap gap-1 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">
                        @foreach(var role in SessionManager.Roles)
                        {
                            <div class="inline-flex items-baseline rounded-md px-2.5 py-0.5 font-semibold text-white" style="background-color: black; font-size: 10px;">
                                @role                      
                            </div>
                        }
                    </p>

                }
            
                <a href="/MicrosoftIdentity/Account/SignOut" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Sign out</a>
            </div>
        }
    </div>
</div>
*@

@code {

    bool ShowContextMenu { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await SessionManager.InitializeAsync();
        //SessionManager.OnChange += StateHasChanged;
    }


    public void Dispose()
    {
       // SessionManager.OnChange -= StateHasChanged;
    }

}
